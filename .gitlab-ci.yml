variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  OP_API_TOKEN: $OP_API_TOKEN
  OP_TESTING_VAULT_ID: $OP_TESTING_VAULT_ID
  NIGHTLY_TOOLCHAIN: nightly-2024-02-22-x86_64-unknown-linux-gnu

default:
  before_script:
    - rustup component add rustfmt
  services:
    - name: docker:24.0.5-dind
      alias: docker
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]

stages:          # List of stages for jobs, and their order of execution
  - test
  - linting
  - build
  - deploy

build-debug:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - quick
  script:
    - echo "Compiling the code..."
    - cargo build

build-release:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - cargo build --release

tests:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  tags:
    - tests
  before_script:
    - apt install -y curl
    - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - docker ps
  script:
    - /usr/local/bin/docker-compose up -d
    - echo "Running unit tests..."
    - cargo t --doc

formatting:
  stage: linting
  tags:
    - linting
  script:
    - echo "Compiling debug build..."
    - cargo build --verbose
    - echo "Linting code..."
    - cargo fmt -- --check

clippy:
  stage: linting
  tags:
    - linting
  script:
    - rustup install $NIGHTLY_TOOLCHAIN
    - rustup component add clippy --toolchain $NIGHTLY_TOOLCHAIN
    - echo "Checking clippy offenses..."
    - cargo clippy --all -- -D warnings

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
